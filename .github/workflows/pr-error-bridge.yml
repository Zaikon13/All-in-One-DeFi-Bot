name: Agent PR Error Bridge

on:
  workflow_run:
    workflows: ['✅ CI Checks', '🔄 ChatGPT Full Sync (PR-based)']
    types: [completed]

permissions:
  contents: read
  actions: read
  checks: read
  pull-requests: write

jobs:
  report:
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Gather failing jobs
        id: gather
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const { owner, repo } = context.repo;

            // find PRs for this commit
            const prs = await github.paginate(
              github.rest.repos.listPullRequestsAssociatedWithCommit,
              { owner, repo, commit_sha: run.head_sha }
            );
            if (!prs.length) { core.setOutput('skip', 'true'); return; }

            // list jobs for this workflow run
            const jobPages = await github.paginate(
              github.rest.actions.listJobsForWorkflowRun,
              { owner, repo, run_id: run.id }
            );
            const failed = jobPages.filter(j => j.conclusion && j.conclusion !== 'success');

            let body = `### ❌ CI failed for **${run.name}**\n` +
                       `**Branch:** \`${run.head_branch}\` — **SHA:** \`${run.head_sha}\`\n` +
                       `**Conclusion:** ${run.conclusion}\n\n`;

            if (failed.length === 0) {
              body += `_No per-job failures reported; check run logs._\n`;
            } else {
              body += `**Failed jobs:**\n`;
              for (const j of failed) {
                body += `- ${j.name} — ${j.conclusion} (logs: ${j.html_url})\n`;
              }
            }
            body += `\n> Tip: Open **Actions → this run** to see exact step errors.`;

            core.setOutput('body', body);
            core.setOutput('pr_number', String(prs[0].number));

      - name: Post/update sticky comment on PR
        if: steps.gather.outputs.skip != 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ steps.gather.outputs.pr_number }}
          message: |
            ## 🤖 Agent Digest
            ${{ steps.gather.outputs.body }}

      # (Optional) Telegram notify — ξεκλείδωσε αν θες
      # - name: Telegram notify
      #   if: steps.gather.outputs.skip != 'true'
      #   run: |
      #     TEXT="❌ CI failed: ${{ github.repository }} PR #${{ steps.gather.outputs.pr_number }} – Check PR comment: Agent Digest"
      #     curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
      #       -d chat_id="${TELEGRAM_CHAT_ID}" \
      #       --data-urlencode text="$TEXT"
      #   env:
      #     TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
